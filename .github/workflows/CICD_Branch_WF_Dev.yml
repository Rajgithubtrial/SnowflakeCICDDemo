# This is a basic workflow to help you get started with Actions
name: CI_CD_WF1
# Controls when the workflow will run
# Triggers the workflow on push or pull request events but only for the "Test_Branch_CICD" branch
# Allows you to run this workflow manually from the Actions tab " workflow_dispatch:" 
on:
  push:
    branches: [ "Dev_Branch" ]
    paths: 
        - 'DWCode/**'
    
  pull_request:
    branches: [ "Dev_Branch" ]


  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Use Python 3.8.x
        uses: actions/setup-python@v2.2.1
        with:
          python-version: 3.8.x
       
      - uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - uses: Azure/get-keyvault-secrets@v1
        with: 
          keyvault: "CICDTestKVRaj"
          secrets: 'SFACCOUNT, SFDATABASE, SFPASSWORD, SFROLE, SFUSERNAME, SFWAREHOUSE'
        id: myGetSecretAction

      - name: Run schemachange
        env:
          SF_ACCOUNT: ${{ steps.myGetSecretAction.outputs.SFACCOUNT }}
          SF_USERNAME: ${{ steps.myGetSecretAction.outputs.SFUSERNAME }}
          SF_ROLE: ${{ steps.myGetSecretAction.outputs.SFROLE }}
          SF_WAREHOUSE: ${{ steps.myGetSecretAction.outputs.SFWAREHOUSE }}
          SF_DATABASE: 'CICD_DEV' 
          SNOWFLAKE_PASSWORD: ${{ steps.myGetSecretAction.outputs.SFPASSWORD }} 
        run: |
          echo "GITHUB_WORKSPACE: with Azure " $GITHUB_WORKSPACE 
          python --version
          echo "Step 1: Installing schemachange"
          pip install schemachange
          echo "Step 2: Running schemachange " 